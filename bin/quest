#!/usr/bin/env ruby

begin
  require 'quest'
  require 'gli'
  require 'net/http'
rescue
  require 'rubygems'
  require 'quest'
  require 'gli'
end

module GLIWrapper
  include Quest::Messenger
  include GLI::App
  extend self

  base_uri = URI('localhost:9393')
  # Quest tools

  program_desc 'Track the status of quests and tasks.'

  desc 'Begin a quest'
  arg :quest_name
  arg_name 'quest_name'
  command :begin do |c|
    c.action do |global_options, options, args|
      if args.length < 1
        raise 'You must specify a quest name. Refer to the Quest Guide or use the "quest list" command.'
      end
      unless Net::HTTP.post_form(URI.join(base_uri, 'active_quest_complete')).body == 'true'
        offer_bailout("The current quest is not complete. If you begin a new quest, your agent nodes will be reset. Your master node and Puppet code will not be affected.\n")
      end
      change_quest(args[0])
    end
  end

  desc 'List available quests'
  command :list do |c|
    c.action do |global_options, options, args|
      puts quests
    end
  end

  desc 'Show status of the current quest'
  command :status do |c|
    c.switch [:s], :desc => 'Show status in summary form.'
    c.switch [:n], :desc => 'Show status in summary form, no colorisation.'
    c.switch [:j], :desc => 'Show status in JSON format. (For debugging)'
    c.action do |global_options, options, args|
      if options[:s]
        puts status(:brief => true)
      elsif options[:n]
        puts status(:brief => true, :color => false)
      elsif options[:j]
        puts status(:raw => true) 
      else
        puts status
      end
    end
  end

  exit run(ARGV)
end
